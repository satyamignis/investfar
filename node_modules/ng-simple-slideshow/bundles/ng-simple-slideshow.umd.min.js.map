{"version":3,"file":"ng-simple-slideshow.umd.min.js","sources":["~/ng-simple-slideshow/src/app/modules/slideshow/swipe.service.ts","~/ng-simple-slideshow/src/app/modules/slideshow/slideshow.component.ts","~/ng-simple-slideshow/src/app/modules/slideshow/slideshow.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SwipeService {\n  // adapted from https://stackoverflow.com/a/44511007/1743936\n  private _swipeCoord?: [number, number];\n  private _swipeTime?: number;\n\n  /**\n   * @param {TouchEvent} e\n   * @param {string} when\n   * @returns {number}\n   * @description detect the direction of the swipe, and return a -1 or 1 if the duration is long enough\n   *              else return a 0 to do nothing\n   */\n  swipe(e: TouchEvent, when: string): number {\n    const coord: [number, number] = [e.changedTouches[0].pageX, e.changedTouches[0].pageY];\n    const time = new Date().getTime();\n\n    if (when === 'start') {\n      this._swipeCoord = coord;\n      this._swipeTime = time;\n    }\n\n    else if (when === 'end') {\n      const direction = [coord[0] - this._swipeCoord[0], coord[1] - this._swipeCoord[1]];\n      const duration = time - this._swipeTime;\n\n      if (duration < 1000 // Short enough\n        && Math.abs(direction[1]) < Math.abs(direction[0]) // Horizontal enough\n        && Math.abs(direction[0]) > 30) {  // Long enough\n        return direction[0] < 0 ? 1 : -1;\n      }\n    }\n\n    return 0;\n  }\n}\n","import { Component, ElementRef, EventEmitter, Inject, Input, Output, PLATFORM_ID, Renderer2, ViewChild, DoCheck, NgZone, OnInit } from '@angular/core';\nimport { SwipeService } from './swipe.service';\nimport { isPlatformServer, DOCUMENT } from '@angular/common';\nimport { ISlide } from './ISlide';\nimport { IImage } from './IImage';\nimport { DomSanitizer, TransferState, makeStateKey, SafeStyle } from '@angular/platform-browser';\n\nconst FIRST_SLIDE_KEY = makeStateKey<any>('firstSlide');\n\n@Component({\n  selector: 'slideshow',\n  template: `\n    <!-- fullscreen bar -->\n    <div [class.display-none]=\"!fullscreen\"\n         class=\"fs-container\"\n         (click)=\"exitFullScreen()\">\n      <i title=\"Back\"\n         class=\"arrow-exitfs prev\"></i>\n    </div>\n    <div #container\n         (touchstart)=\"onSwipe($event, 'start')\"\n         (touchend)=\"onSwipe($event, 'end')\"\n         class=\"slideshow-container\"\n         [class.slideshow-container-fs]=\"fullscreen\">\n      <!-- slides -->\n      <a *ngFor=\"let slide of slides; index as i; trackBy: trackByFn\"\n         class=\"slides\"\n         href=\"{{slide?.image?.clickAction ? '#' : slide?.image?.href}}\"\n         title=\"{{slide?.image?.title}}\"\n         [ngStyle]=\"getSlideStyle(i)\"\n         [class.selected]=\"slide?.selected\"\n         [class.hide-slide]=\"!slide?.selected && !slide?.leftSide && !slide?.rightSide\"\n         [class.left-side]=\"slide?.leftSide\"\n         [class.right-side]=\"slide?.rightSide\"\n         [class.slide-in-left]=\"slide?.action === 'slideInLeft'\"\n         [class.slide-in-right]=\"slide?.action === 'slideInRight'\"\n         [class.slide-out-left]=\"slide?.action === 'slideOutLeft'\"\n         [class.slide-out-right]=\"slide?.action === 'slideOutRight'\"\n         [class.link]=\"slide?.image?.clickAction || slide?.image?.href\"\n         (click)=\"onClick($event)\">\n        <div class=\"loader\"\n             *ngIf=\"!slide?.loaded\"></div>\n        <div *ngIf=\"showCaptions && slide?.image?.caption\"\n             class=\"caption\"\n             [ngStyle]=\"{\n               'color': captionColor,\n               'background-color': captionBackground\n              }\"\n             [innerHTML]=\"slide?.image?.caption\">\n        </div>\n      </a>\n      <!-- left arrow -->\n      <div [class.display-none]=\"!this.showArrows\"\n           (click)=\"onSlide(-1)\"\n           class=\"arrow-container prev\">\n        <i #prevArrow\n           title=\"Previous\"\n           class=\"arrow prev\"></i>\n      </div>\n      <!-- right arrow -->\n      <div [class.display-none]=\"!this.showArrows\"\n           (click)=\"onSlide(1)\"\n           class=\"arrow-container next\">\n        <i #nextArrow\n           title=\"Next\"\n           class=\"arrow next\"></i>\n      </div>\n      <!-- dots -->\n      <ul class=\"slick-dots\"\n          *ngIf=\"showDots\">\n        <li *ngFor=\"let slide of slides; index as i; trackBy: trackByFn\"\n            (click)=\"goToSlide(i)\"\n            [class.slick-active]=\"slide.selected\">\n          <button type=\"button\"\n                  [attr.style]=\"safeStyleDotColor\">\n            {{i}}\n          </button>\n        </li>\n      </ul>\n    </div>\n  `,\n  styles: [`\n    /*\n     styles adapted from https://www.w3schools.com/w3css/4/w3.css\n     arrow styles adapted from https://codepen.io/minustalent/pen/Frhaw\n     */\n    .display-none {\n      display: none !important; }\n\n    .fs-container {\n      display: block;\n      cursor: pointer;\n      position: absolute;\n      z-index: 1;\n      top: 0;\n      left: 0;\n      width: 48px;\n      height: 48px;\n      text-align: center;\n      padding: 0;\n      background-color: rgba(0, 0, 0, 0.2);\n      -webkit-transition: all .2s ease-in-out;\n      transition: all .2s ease-in-out; }\n      .fs-container:hover {\n        background-color: rgba(0, 0, 0, 0.33); }\n      .fs-container .arrow-exitfs {\n        display: block;\n        width: 30px;\n        height: 30px;\n        background: transparent;\n        border-top: 2px solid #f2f2f2;\n        -webkit-transition: all .2s ease-in-out;\n        transition: all .2s ease-in-out; }\n        .fs-container .arrow-exitfs.prev {\n          -webkit-transform: rotate(-45deg);\n                  transform: rotate(-45deg);\n          position: relative;\n          left: 18px;\n          top: 18px; }\n        .fs-container .arrow-exitfs:after {\n          content: '';\n          width: 30px;\n          height: 30px;\n          background: transparent;\n          border-top: 2px solid #f2f2f2;\n          -webkit-transform: rotate(90deg);\n                  transform: rotate(90deg);\n          position: absolute;\n          left: -15px;\n          top: -17px; }\n\n    .slideshow-container.slideshow-container-fs {\n      position: fixed;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%; }\n\n    .slideshow-container {\n      position: relative;\n      display: block;\n      margin: auto;\n      height: 100%;\n      width: 100%;\n      overflow: hidden; }\n      .slideshow-container .hide-slide {\n        visibility: hidden;\n        position: absolute;\n        top: -100vw;\n        left: -100vw;\n        opacity: 0; }\n      .slideshow-container .slides {\n        position: absolute;\n        top: 0;\n        height: 100%;\n        width: 100%;\n        visibility: visible;\n        opacity: 1;\n        display: block; }\n        .slideshow-container .slides.selected {\n          left: 0; }\n        .slideshow-container .slides.left-slide {\n          left: -100%; }\n        .slideshow-container .slides.right-slide {\n          left: 100%; }\n        .slideshow-container .slides.slide-in-left {\n          left: 0;\n          -webkit-animation: slideInLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1);\n                  animation: slideInLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\n        .slideshow-container .slides.slide-in-right {\n          left: 0;\n          -webkit-animation: slideInRight 0.5s cubic-bezier(0.42, 0, 0.58, 1);\n                  animation: slideInRight 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\n        .slideshow-container .slides.slide-out-left {\n          left: -100%;\n          -webkit-animation: slideOutLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1);\n                  animation: slideOutLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\n        .slideshow-container .slides.slide-out-right {\n          left: 100%;\n          -webkit-animation: slideOutRight 0.5s cubic-bezier(0.42, 0, 0.58, 1);\n                  animation: slideOutRight 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\n        .slideshow-container .slides.link {\n          cursor: pointer; }\n        .slideshow-container .slides:not(.link) {\n          cursor: default; }\n      .slideshow-container .caption {\n        position: absolute;\n        bottom: 0;\n        padding: 10px;\n        width: 100%; }\n      .slideshow-container .arrow-container {\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-align: center;\n            -ms-flex-align: center;\n                align-items: center;\n        -webkit-box-pack: center;\n            -ms-flex-pack: center;\n                justify-content: center;\n        position: absolute;\n        top: 0;\n        height: 100%;\n        width: auto;\n        cursor: pointer;\n        background-size: 100%;\n        background-image: -webkit-gradient(linear, left top, left bottom, from(transparent), to(transparent));\n        background-image: linear-gradient(transparent, transparent);\n        z-index: 100;\n        -webkit-user-select: none;\n           -moz-user-select: none;\n            -ms-user-select: none;\n                user-select: none; }\n        .slideshow-container .arrow-container:before {\n          display: block;\n          height: 100%;\n          position: absolute;\n          top: 0;\n          left: 0;\n          opacity: 0;\n          width: 100%;\n          z-index: -100;\n          -webkit-transition: opacity 0.45s;\n          transition: opacity 0.45s; }\n        .slideshow-container .arrow-container.prev {\n          left: 0; }\n          .slideshow-container .arrow-container.prev:before {\n            background-image: -webkit-gradient(linear, right top, left top, from(transparent), to(rgba(0, 0, 0, 0.75)));\n            background-image: linear-gradient(to left, transparent, rgba(0, 0, 0, 0.75));\n            content: ''; }\n        .slideshow-container .arrow-container.next {\n          right: 0; }\n          .slideshow-container .arrow-container.next:before {\n            background-image: -webkit-gradient(linear, left top, right top, from(transparent), to(rgba(0, 0, 0, 0.75)));\n            background-image: linear-gradient(to right, transparent, rgba(0, 0, 0, 0.75));\n            content: ''; }\n        .slideshow-container .arrow-container .arrow {\n          display: block;\n          margin: auto;\n          width: 30px;\n          height: 30px;\n          background: transparent;\n          border-top: 2px solid #f2f2f2;\n          border-left: 2px solid #f2f2f2;\n          -webkit-transition: all .2s ease-in-out;\n          transition: all .2s ease-in-out;\n          -webkit-user-select: none;\n             -moz-user-select: none;\n              -ms-user-select: none;\n                  user-select: none; }\n          .slideshow-container .arrow-container .arrow:before {\n            display: block;\n            height: 200%;\n            width: 200%;\n            margin-left: -50%;\n            margin-top: -50%;\n            content: \"\";\n            -webkit-transform: rotate(45deg);\n                    transform: rotate(45deg); }\n          .slideshow-container .arrow-container .arrow.prev {\n            -webkit-transform: rotate(-45deg);\n                    transform: rotate(-45deg);\n            position: relative;\n            left: 20px;\n            margin-right: 10px; }\n          .slideshow-container .arrow-container .arrow.next {\n            -webkit-transform: rotate(135deg);\n                    transform: rotate(135deg);\n            position: relative;\n            right: 20px;\n            margin-left: 10px; }\n      .slideshow-container .slick-dots {\n        display: block;\n        bottom: 15px;\n        z-index: 1;\n        text-align: center;\n        position: absolute;\n        padding: 0;\n        left: 0;\n        right: 0;\n        margin: 0 auto; }\n        .slideshow-container .slick-dots li {\n          display: inline;\n          margin: 0;\n          padding: 0; }\n          .slideshow-container .slick-dots li button {\n            border: none;\n            background: none;\n            text-indent: -9999px;\n            font-size: 0;\n            width: 20px;\n            height: 20px;\n            outline: none;\n            position: relative;\n            z-index: 1;\n            cursor: pointer; }\n            .slideshow-container .slick-dots li button:before {\n              content: '';\n              width: 4px;\n              height: 4px;\n              background: var(--dot-color, #FFF);\n              border-radius: 4px;\n              display: block;\n              position: absolute;\n              top: 50%;\n              left: 50%;\n              -webkit-transform: translate(-50%, -50%);\n                      transform: translate(-50%, -50%);\n              opacity: .7;\n              -webkit-transition: all .5s ease-out;\n              transition: all .5s ease-out; }\n          .slideshow-container .slick-dots li.slick-active button:before {\n            -webkit-transform: translate(-50%, -50%) scale(1.4);\n                    transform: translate(-50%, -50%) scale(1.4);\n            opacity: 1; }\n\n    @media screen and (min-width: 768px) {\n      .slideshow-container .arrow-container:hover:before {\n        opacity: 1; }\n      .slideshow-container .arrow-container:hover .arrow {\n        border-width: 4px; }\n      .slideshow-container .arrow-container .arrow:hover {\n        border-width: 4px; } }\n\n    @-webkit-keyframes slideInRight {\n      0% {\n        left: -100%; }\n      100% {\n        left: 0; } }\n\n    @keyframes slideInRight {\n      0% {\n        left: -100%; }\n      100% {\n        left: 0; } }\n\n    @-webkit-keyframes slideInLeft {\n      0% {\n        left: 100%; }\n      100% {\n        left: 0; } }\n\n    @keyframes slideInLeft {\n      0% {\n        left: 100%; }\n      100% {\n        left: 0; } }\n\n    @-webkit-keyframes slideOutRight {\n      0% {\n        left: 0; }\n      100% {\n        left: -100%; } }\n\n    @keyframes slideOutRight {\n      0% {\n        left: 0; }\n      100% {\n        left: -100%; } }\n\n    @-webkit-keyframes slideOutLeft {\n      0% {\n        left: 0; }\n      100% {\n        left: 100%; } }\n\n    @keyframes slideOutLeft {\n      0% {\n        left: 0; }\n      100% {\n        left: 100%; } }\n\n    .loader {\n      position: absolute;\n      left: 50%;\n      margin-left: -20px;\n      top: 50%;\n      margin-top: -20px;\n      border: 5px solid #f3f3f3;\n      border-top: 5px solid #555;\n      border-radius: 50%;\n      width: 50px;\n      height: 50px;\n      -webkit-animation: spin 1s linear infinite;\n              animation: spin 1s linear infinite; }\n\n    @-webkit-keyframes spin {\n      0% {\n        -webkit-transform: rotate(0deg);\n                transform: rotate(0deg); }\n      100% {\n        -webkit-transform: rotate(360deg);\n                transform: rotate(360deg); } }\n\n    @keyframes spin {\n      0% {\n        -webkit-transform: rotate(0deg);\n                transform: rotate(0deg); }\n      100% {\n        -webkit-transform: rotate(360deg);\n                transform: rotate(360deg); } }\n  `]\n})\nexport class SlideshowComponent implements OnInit, DoCheck {\n  slideIndex: number = 0;\n  slides: ISlide[] = [];\n  private _urlCache: (string | IImage)[];\n  private _autoplayIntervalId: any;\n  private _initial: boolean = true;\n  private _isHidden: boolean = false;\n\n  @Input() imageUrls: (string | IImage)[] = [];\n  @Input() height: string = '100%';\n  @Input() minHeight: string;\n  @Input() arrowSize: string;\n  @Input() showArrows: boolean = true;\n  @Input() disableSwiping: boolean = false;\n  @Input() autoPlay: boolean = false;\n  @Input() autoPlayInterval: number = 3333;\n  @Input() stopAutoPlayOnSlide: boolean = true;\n  @Input() autoPlayWaitForLazyLoad: boolean = false;\n  @Input() debug: boolean;\n  @Input() backgroundSize: string = 'cover';\n  @Input() backgroundPosition: string = 'center center';\n  @Input() backgroundRepeat: string = 'no-repeat';\n  @Input() showDots: boolean = false;\n  @Input() dotColor: string = '#FFF';\n  @Input() showCaptions: boolean = true;\n  @Input() captionColor: string = '#FFF';\n  @Input() captionBackground: string = 'rgba(0, 0, 0, .35)';\n  @Input() lazyLoad: boolean = false;\n  @Input() hideOnNoSlides: boolean = false;\n  @Input() fullscreen: boolean = false;\n\n  @Output() onSlideLeft = new EventEmitter<number>();\n  @Output() onSlideRight = new EventEmitter<number>();\n  @Output() onSwipeLeft = new EventEmitter<number>();\n  @Output() onSwipeRight = new EventEmitter<number>();\n\n  @ViewChild('container') container: ElementRef;\n  @ViewChild('prevArrow') prevArrow: ElementRef;\n  @ViewChild('nextArrow') nextArrow: ElementRef;\n\n  get safeStyleDotColor(): SafeStyle {\n    return this.sanitizer.bypassSecurityTrustStyle(`--dot-color: ${ this.dotColor }`);\n  }\n\n  constructor(\n    private _swipeService: SwipeService,\n    private _renderer: Renderer2,\n    private _transferState: TransferState,\n    private _ngZone: NgZone,\n    public sanitizer: DomSanitizer,\n    @Inject(PLATFORM_ID) private platform_id: any,\n    @Inject(DOCUMENT) private document: any\n  ) { }\n\n  ngOnInit() {\n    if (this.debug !== undefined) {\n      console.warn('[Deprecation Warning]: The debug input will be removed from ng-simple-slideshow in 1.3.0');\n    }\n  }\n\n  ngDoCheck() {\n    // if this is the first being called, create a copy of the input\n    if (this.imageUrls && this.imageUrls.length > 0) {\n      if (this._initial === true) {\n        this._urlCache = Array.from(this.imageUrls);\n      }\n\n      if (this._isHidden === true) {\n        this._renderer.removeStyle(this.container.nativeElement, 'display');\n        this._isHidden = false;\n      }\n\n      this.setSlides();\n    }\n    else if (this.hideOnNoSlides === true) {\n      this._renderer.setStyle(this.container.nativeElement, 'display', 'none');\n      this._isHidden = true;\n    }\n\n    this.setStyles();\n    this.handleAutoPlay();\n  }\n\n  /**\n   * @param {number} indexDirection\n   * @param {boolean} isSwipe\n   * @description this is the function that should be called to make the slides change.\n   *              indexDirection to move back is -1, to move forward is 1, and to stay in place is 0.\n   *              0 is taken into account for failed swipes\n   */\n  onSlide(indexDirection: number, isSwipe?: boolean): void {\n    this.handleAutoPlay(this.stopAutoPlayOnSlide);\n    this.slide(indexDirection, isSwipe);\n  }\n\n  /**\n   * @param {TouchEvent} e\n   * @param {string} when\n   * @description Use the swipe service to detect swipe events from phone and tablets\n   */\n  onSwipe(e: TouchEvent, when: string): void {\n    if (this.disableSwiping === true) {\n      return;\n    }\n\n    const indexDirection = this._swipeService.swipe(e, when);\n    // handle a failed swipe\n    if (indexDirection === 0) {\n      return;\n    }\n    else {\n      this.onSlide(indexDirection, true);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} e\n   * @description Redirect to current slide \"href\" if defined\n   */\n  onClick(e: MouseEvent): void {\n    e.preventDefault();\n    const currentSlide = this.slides.length > 0 && this.slides[this.slideIndex];\n\n    if (currentSlide && currentSlide.image.clickAction) {\n      currentSlide.image.clickAction();\n    }\n    else if (currentSlide && currentSlide.image.href) {\n      this.document.location.href = currentSlide.image.href;\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @description set the index to the desired index - 1 and simulate a right slide\n   */\n  goToSlide(index: number) {\n    const beforeClickIndex = this.slideIndex;\n    this.slideIndex = index - 1;\n    this.setSlideIndex(1);\n\n    if (!this.slides[this.slideIndex].loaded) {\n      this.loadRemainingSlides();\n    }\n\n    this.handleAutoPlay(this.stopAutoPlayOnSlide);\n    this.slideRight(beforeClickIndex);\n    this.slides[beforeClickIndex].selected = false;\n    this.slides[this.slideIndex].selected = true;\n  }\n\n  /**\n   * @param {number} index\n   * @description set the index to the desired index - 1 and simulate a right slide\n   */\n  getSlideStyle(index: number) {\n    const slide = this.slides[index];\n\n    if (slide.loaded) {\n      return {\n        \"background-image\": 'url(' + slide.image.url + ')',\n        \"background-size\": slide.image.backgroundSize || this.backgroundSize,\n        \"background-position\": slide.image.backgroundPosition || this.backgroundPosition,\n        \"background-repeat\": slide.image.backgroundRepeat || this.backgroundRepeat\n      };\n    }\n    else {\n      // doesn't compile correctly if returning an empty object, sooooo.....\n      return {\n        \"background-image\": undefined,\n        \"background-size\": undefined,\n        \"background-position\": undefined,\n        \"background-repeat\": undefined\n      };\n    }\n  }\n\n  exitFullScreen() {\n    this.fullscreen = false;\n  }\n\n  /**\n   * @param {number} indexDirection\n   * @param {boolean} isSwipe\n   * @description Set the new slide index, then make the transition happen.\n   */\n  private slide(indexDirection: number, isSwipe?: boolean): void {\n    const oldIndex = this.slideIndex;\n\n    this.setSlideIndex(indexDirection);\n\n    if (!this.slides[this.slideIndex].loaded) {\n      this.loadRemainingSlides();\n    }\n\n    if (indexDirection === 1) {\n      this.slideRight(oldIndex, isSwipe);\n    }\n    else {\n      this.slideLeft(oldIndex, isSwipe);\n    }\n\n    this.slides[oldIndex].selected = false;\n    this.slides[this.slideIndex].selected = true;\n  }\n\n  /**\n   * @param {number} indexDirection\n   * @description This is just treating the url array like a circular list.\n   */\n  private setSlideIndex(indexDirection: number): void {\n    this.slideIndex += indexDirection;\n\n    if (this.slideIndex < 0) {\n      this.slideIndex = this.slides.length - 1;\n    }\n\n    if (this.slideIndex >= this.slides.length) {\n      this.slideIndex = 0;\n    }\n  }\n\n  /**\n   * @param {number} oldIndex\n   * @param {boolean} isSwipe\n   * @description This function handles the variables to move the CSS classes around accordingly.\n   *              In order to correctly handle animations, the new slide as well as the slides to\n   *              the left and right are assigned classes.\n   */\n  private slideLeft(oldIndex: number, isSwipe?: boolean): void {\n    if (isSwipe === true) {\n      this.onSwipeLeft.emit(this.slideIndex);\n    }\n    else {\n      this.onSlideLeft.emit(this.slideIndex);\n    }\n\n    this.slides[this.getLeftSideIndex(oldIndex)].leftSide = false;\n    this.slides[oldIndex].leftSide = true;\n    this.slides[oldIndex].action = 'slideOutLeft';\n    this.slides[this.slideIndex].rightSide = false;\n    this.slides[this.getRightSideIndex()].rightSide = true;\n    this.slides[this.slideIndex].action = 'slideInRight';\n  }\n\n  /**\n   * @param {number} oldIndex\n   * @param {boolean} isSwipe\n   * @description This function handles the variables to move the CSS classes around accordingly.\n   *              In order to correctly handle animations, the new slide as well as the slides to\n   *              the left and right are assigned classes.\n   */\n  private slideRight(oldIndex: number, isSwipe?: boolean): void {\n    if (isSwipe === true) {\n      this.onSwipeRight.emit(this.slideIndex);\n    }\n    else {\n      this.onSlideRight.emit(this.slideIndex);\n    }\n\n    this.slides[this.getRightSideIndex(oldIndex)].rightSide = false;\n    this.slides[oldIndex].rightSide = true;\n    this.slides[oldIndex].action = 'slideOutRight';\n    this.slides[this.slideIndex].leftSide = false;\n    this.slides[this.getLeftSideIndex()].leftSide = true;\n    this.slides[this.slideIndex].action = 'slideInLeft';\n  }\n\n  /**\n   * @description Check to make sure slide images have been set or haven't changed\n   */\n  private setSlides(): void {\n    if (this.imageUrls) {\n      if (this.checkCache() || this._initial === true) {\n        this._initial = false;\n        this._urlCache = Array.from(this.imageUrls);\n        this.slides = [];\n\n        if (this.lazyLoad === true) {\n          this.buildLazyLoadSlideArray();\n        }\n        else {\n          this.buildSlideArray();\n        }\n      }\n    }\n  }\n\n  /**\n   * @description create the slides without background urls, which will be added in\n   *              for the \"lazy load,\" then load only the first slide\n   */\n  private buildLazyLoadSlideArray(): void {\n    for (let image of this.imageUrls) {\n      this.slides.push({\n        image: (typeof image === 'string' ? { url: null } : { url: null, href: image.href || '' }),\n        action: '',\n        leftSide: false,\n        rightSide: false,\n        selected: false,\n        loaded: false\n      });\n    }\n\n    this.slides[this.slideIndex].selected = true;\n    this.loadFirstSlide();\n  }\n\n  /**\n   * @description create the slides with background urls all at once\n   */\n  private buildSlideArray(): void {\n    for (let image of this.imageUrls) {\n      this.slides.push({\n        image: (typeof image === 'string' ? { url: image } : image),\n        action: '',\n        leftSide: false,\n        rightSide: false,\n        selected: false,\n        loaded: true\n      });\n    }\n\n    this.slides[this.slideIndex].selected = true;\n  }\n\n  /**\n   * @description load the first slide image if lazy loading\n   *              this takes server side and browser side into account\n   */\n  private loadFirstSlide(): void {\n    const tmpIndex = this.slideIndex;\n    const tmpImage = this.imageUrls[tmpIndex];\n\n    // if server side, we don't need to worry about the rest of the slides\n    if (isPlatformServer(this.platform_id)) {\n      this.slides[tmpIndex].image = (typeof tmpImage === 'string' ? { url: tmpImage } : tmpImage);\n      this.slides[tmpIndex].loaded = true;\n      this._transferState.set(FIRST_SLIDE_KEY, this.slides[tmpIndex]);\n    }\n    else {\n      const firstSlideFromTransferState = this._transferState.get(FIRST_SLIDE_KEY, null as any);\n      // if the first slide didn't finish loading on the server side, we need to load it\n      if (firstSlideFromTransferState === null) {\n        let loadImage = new Image();\n        loadImage.src = (typeof tmpImage === 'string' ? tmpImage : tmpImage.url);\n        loadImage.addEventListener('load', () => {\n          this.slides[tmpIndex].image = (typeof tmpImage === 'string' ? { url: tmpImage } : tmpImage);\n          this.slides[tmpIndex].loaded = true;\n        });\n      }\n      else {\n        this.slides[tmpIndex] = firstSlideFromTransferState;\n        this._transferState.remove(FIRST_SLIDE_KEY);\n      }\n    }\n  }\n\n  /**\n   * @description if lazy loading in browser, start loading remaining slides\n   * @todo: figure out how to not show the spinner if images are loading fast enough\n   */\n  private loadRemainingSlides(): void {\n    for (let i = 0; i < this.slides.length; i++) {\n      if (!this.slides[i].loaded) {\n        new Promise((resolve) => {\n          const tmpImage = this.imageUrls[i];\n          let loadImage = new Image();\n          loadImage.addEventListener('load', () => {\n            this.slides[i].image = (typeof tmpImage === 'string' ? { url: tmpImage } : tmpImage);\n            this.slides[i].loaded = true;\n            resolve();\n          });\n          loadImage.src = (typeof tmpImage === 'string' ? tmpImage : tmpImage.url);\n        });\n      }\n    }\n  }\n\n  /**\n   * @param {boolean} stopAutoPlay\n   * @description Start or stop autoPlay, don't do it at all server side\n   */\n  private handleAutoPlay(stopAutoPlay?: boolean): void {\n    if (isPlatformServer(this.platform_id)) {\n      return;\n    }\n\n    if (stopAutoPlay === true || this.autoPlay === false) {\n      if (this._autoplayIntervalId) {\n        this._ngZone.runOutsideAngular(() => clearInterval(this._autoplayIntervalId));\n        this._autoplayIntervalId = null;\n      }\n    }\n    else if (!this._autoplayIntervalId) {\n      this._ngZone.runOutsideAngular(() => {\n        this._autoplayIntervalId = setInterval(() => {\n          if (!this.autoPlayWaitForLazyLoad || (this.autoPlayWaitForLazyLoad && this.slides[this.slideIndex].loaded)) {\n            this._ngZone.run(() => this.slide(1));\n          }\n        }, this.autoPlayInterval);\n      });\n    }\n  }\n\n  /**\n   * @description Keep the styles up to date with the input\n   */\n  private setStyles(): void {\n    if (this.fullscreen) {\n      this._renderer.setStyle(this.container.nativeElement, 'height', '100%');\n      // Would be nice to make it configurable\n      this._renderer.setStyle(this.container.nativeElement, 'background-color', 'white');\n    } else {\n      // Would be nice to make it configurable\n      this._renderer.removeStyle(this.container.nativeElement, 'background-color');\n      if (this.height) {\n        this._renderer.setStyle(this.container.nativeElement, 'height', this.height);\n      }\n\n      if (this.minHeight) {\n        this._renderer.setStyle(this.container.nativeElement, 'min-height', this.minHeight);\n      }\n    }\n    if (this.arrowSize) {\n      this._renderer.setStyle(this.prevArrow.nativeElement, 'height', this.arrowSize);\n      this._renderer.setStyle(this.prevArrow.nativeElement, 'width', this.arrowSize);\n      this._renderer.setStyle(this.nextArrow.nativeElement, 'height', this.arrowSize);\n      this._renderer.setStyle(this.nextArrow.nativeElement, 'width', this.arrowSize);\n    }\n  }\n\n  /**\n   * @description compare image array to the cache, returns false if no changes\n   */\n  private checkCache(): boolean {\n    return !(this._urlCache.length === this.imageUrls.length && this._urlCache.every((cacheElement, i) => cacheElement === this.imageUrls[i]));\n  }\n\n  /**\n   * @param {number} i\n   * @returns {number}\n   * @description get the index for the slide to the left of the new slide\n   */\n  private getLeftSideIndex(i?: number): number {\n    if (i === undefined) {\n      i = this.slideIndex;\n    }\n\n    if (--i < 0) {\n      i = this.slides.length - 1;\n    }\n\n    return i;\n  }\n\n  /**\n   * @param {number} i\n   * @returns {number}\n   * @description get the index for the slide to the right of the new slide\n   */\n  private getRightSideIndex(i?: number): number {\n    if (i === undefined) {\n      i = this.slideIndex;\n    }\n\n    if (++i >= this.slides.length) {\n      i = 0;\n    }\n\n    return i;\n  }\n\n  /**\n   * @param {number} index\n   * @param {ISlide} slide\n   * @returns {any}\n   * @description a trackBy function for the ngFor loops\n   */\n  trackByFn(index: number, slide: ISlide): any {\n    return slide.image;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SlideshowComponent } from './slideshow.component';\nimport { SwipeService } from './swipe.service';\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserTransferStateModule\n  ],\n  declarations: [\n    SlideshowComponent\n  ],\n  exports: [\n    SlideshowComponent\n  ],\n  providers: [\n    SwipeService\n  ]\n})\nexport class SlideshowModule { }\n"],"names":["SwipeService","prototype","swipe","e","when","coord","changedTouches","pageX","pageY","time","Date","getTime","this","_swipeCoord","_swipeTime","direction","Math","abs","decorators","type","Injectable","ctorParameters","FIRST_SLIDE_KEY","makeStateKey","SlideshowComponent","_swipeService","_renderer","_transferState","_ngZone","sanitizer","platform_id","document","slideIndex","slides","_initial","_isHidden","imageUrls","height","showArrows","disableSwiping","autoPlay","autoPlayInterval","stopAutoPlayOnSlide","autoPlayWaitForLazyLoad","backgroundSize","backgroundPosition","backgroundRepeat","showDots","dotColor","showCaptions","captionColor","captionBackground","lazyLoad","hideOnNoSlides","fullscreen","onSlideLeft","EventEmitter","onSlideRight","onSwipeLeft","onSwipeRight","Object","defineProperty","get","bypassSecurityTrustStyle","ngOnInit","debug","undefined","console","warn","ngDoCheck","length","_urlCache","Array","from","removeStyle","container","nativeElement","setSlides","setStyle","setStyles","handleAutoPlay","onSlide","indexDirection","isSwipe","slide","onSwipe","onClick","preventDefault","currentSlide","image","clickAction","href","location","goToSlide","index","beforeClickIndex","setSlideIndex","loaded","loadRemainingSlides","slideRight","selected","getSlideStyle","background-image","url","background-size","background-position","background-repeat","exitFullScreen","oldIndex","slideLeft","emit","getLeftSideIndex","leftSide","action","rightSide","getRightSideIndex","checkCache","buildLazyLoadSlideArray","buildSlideArray","_i","_a","push","loadFirstSlide","_this","tmpIndex","tmpImage","isPlatformServer","set","firstSlideFromTransferState","loadImage","Image","src","addEventListener","remove","_loop_1","i","this_1","Promise","resolve","stopAutoPlay","_autoplayIntervalId","runOutsideAngular","clearInterval","setInterval","run","minHeight","arrowSize","prevArrow","nextArrow","every","cacheElement","trackByFn","Component","args","selector","template","styles","Renderer2","TransferState","NgZone","DomSanitizer","Inject","PLATFORM_ID","DOCUMENT","propDecorators","Input","Output","ViewChild","SlideshowModule","NgModule","imports","CommonModule","BrowserTransferStateModule","declarations","exports","providers"],"mappings":"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"}
